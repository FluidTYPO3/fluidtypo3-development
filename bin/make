#!/usr/bin/env php
<?php
/**
 * Bulk command to perform style validation, unit testing
 * and git commit validation.
 */

/**
 * @param string $message
 * @param integer $code
 */
function exitWithError($message, $code = 1) {
	echo '!! ERROR !!';
	echo PHP_EOL;
	echo PHP_EOL;
	echo $message;
	echo PHP_EOL;
	exit($code);
}

echo '++ Starting code checks and tests';
echo PHP_EOL;
echo PHP_EOL;

$checkers = array('checkstyle', 'checkcommits', 'runtests');
$executables = array_merge(array('phpunit', 'phpcs'), $checkers);

// Step 1: determine calling origin:
// Resolve the path to the ./vendor/bin/ folder that contains other scripts
$path = dirname($argv[0]) . '/';
// Validate that this path is correct:
$standardPathWarning = 'Path "%s" does not appear to contain an executable "phpunit" binary. Please make sure you called the ' .
	'script using the path ./vendor/bin/make from the root of your project folder';

foreach ($executables as $expectedExecutable) {
	$executable = $path . $expectedExecutable;
	if (FALSE === is_executable(realpath($executable))) {
		exitWithError(sprintf($standardPathWarning, $path, $expectedExecutable), 2);
	}
}

// Step 2: execute each of the dedicated checkers:
foreach ($checkers as $checker) {
	echo '++ Running check: ' . $checker;
	echo PHP_EOL;
	echo PHP_EOL;

	$descriptors = array(
		array("pipe", "r"),
		array("pipe", "w"),
		array("pipe", "r")
	);
	$pipes = array();

	$process = proc_open($path . $checker, $descriptors, $pipes);
	fclose($pipes[0]);

	while ($threeChars = fread($pipes[1], 24)) {
		echo $threeChars;
	}

	fclose($pipes[1]);

	$errors = stream_get_contents($pipes[2]);
	fclose($pipes[2]);

	if (FALSE === empty($errors)) {
		exitWithError($errors);
	}
	echo PHP_EOL;
}

echo '++ All checks and tests completed succesfully!';
echo PHP_EOL;

exit(0);
